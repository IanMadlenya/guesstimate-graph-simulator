{"version":3,"file":"library-dist.js","sources":["library-dist.js","/source/library-dist.js"],"names":["factory","exports","module","define","amd","_","require","NodeCollection","EdgeCollection","RepoGraph","repo","defaultData","nodes","edges","data","this","unsavedChanges","propogate","nodeId","node","get","remove","dependents","allOfTtype","map","n","outsideNodes","select","ttype","insideNodes","union","allOutputs","difference","models","params","asCytoscape","toCytoscape","undefined","editingNode","editingCytoscapeNode","find","f","id","editing","toJSON"],"mappings":"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","sourceRoot":"/source/","sourcesContent":["(function (factory) {\n  !(typeof exports === 'object' && typeof module !== 'undefined') &&\n  typeof define === 'function' && define.amd ? define(factory) :\n  factory()\n}(function () { 'use strict';\n\n  var _ = require('lodash');\n  var NodeCollection = require('./collections/nodecollection');\n  var EdgeCollection = require('./collections/edgecollection');\n\n  class RepoGraph {\n    constructor(repo){\n      var defaultData = { nodes: [], edges: []  };\n      var data = repo.data || defaultData;\n      this.nodes = new NodeCollection(data.nodes, this);\n      this.edges = new EdgeCollection(data.edges, this);\n      this.unsavedChanges = false;\n      this.propogate();\n    }\n    removeNode(nodeId){\n      var node = this.nodes.get(nodeId);\n      node.remove();\n    }\n    propogate(){\n      var dependents = this.nodes.allOfTtype('dependent');\n      dependents.map(n => n.propogate());\n    }\n    outsideMetrics(node){\n      var nodes = this.outsideNodes(node);\n      return _.select(nodes, function(n) {return (n.ttype() !== 'function'); });\n    }\n    // Used to find possible outputs for a function node\n    outsideNodes(node){\n      var insideNodes = _.union([node], node.allOutputs());\n      return _.difference(this.nodes.models, insideNodes);\n    }\n    toCytoscape(params){\n      let asCytoscape = {nodes: this.nodes.toCytoscape(), edges: this.edges.toCytoscape()};\n      if (params.editingNode !== undefined) {\n        const editingCytoscapeNode = _.find(asCytoscape.nodes, function(f){return f.data.nodeId === params.editingNode.id; }, this);\n        editingCytoscapeNode.data.editing = 'true';\n      }\n      return asCytoscape;\n    }\n    toJSON() {\n      return {\n        nodes: this.nodes.toJSON(),\n        edges: this.edges.toJSON()\n      };\n    }\n  }\n\n  module.exports = RepoGraph;\n\n}));\n","(function (factory) {\n  !(typeof exports === 'object' && typeof module !== 'undefined') &&\n  typeof define === 'function' && define.amd ? define(factory) :\n  factory()\n}(function () { 'use strict';\n\n  var _ = require('lodash');\n  var NodeCollection = require('./collections/nodecollection');\n  var EdgeCollection = require('./collections/edgecollection');\n\n  class RepoGraph {\n    constructor(repo){\n      var defaultData = { nodes: [], edges: []  };\n      var data = repo.data || defaultData;\n      this.nodes = new NodeCollection(data.nodes, this);\n      this.edges = new EdgeCollection(data.edges, this);\n      this.unsavedChanges = false;\n      this.propogate();\n    }\n    removeNode(nodeId){\n      var node = this.nodes.get(nodeId);\n      node.remove();\n    }\n    propogate(){\n      var dependents = this.nodes.allOfTtype('dependent');\n      dependents.map(n => n.propogate());\n    }\n    outsideMetrics(node){\n      var nodes = this.outsideNodes(node);\n      return _.select(nodes, function(n) {return (n.ttype() !== 'function'); });\n    }\n    // Used to find possible outputs for a function node\n    outsideNodes(node){\n      var insideNodes = _.union([node], node.allOutputs());\n      return _.difference(this.nodes.models, insideNodes);\n    }\n    toCytoscape(params){\n      let asCytoscape = {nodes: this.nodes.toCytoscape(), edges: this.edges.toCytoscape()};\n      if (params.editingNode !== undefined) {\n        const editingCytoscapeNode = _.find(asCytoscape.nodes, function(f){return f.data.nodeId === params.editingNode.id; }, this);\n        editingCytoscapeNode.data.editing = 'true';\n      }\n      return asCytoscape;\n    }\n    toJSON() {\n      return {\n        nodes: this.nodes.toJSON(),\n        edges: this.edges.toJSON()\n      };\n    }\n  }\n\n  module.exports = RepoGraph;\n\n}));\n"]}